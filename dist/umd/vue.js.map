{"version":3,"file":"vue.js","sources":["../../src/util/index.js","../../src/observer/dep.js","../../src/observer/array.js","../../src/observer/index.js","../../src/util/next-tick.js","../../src/observer/scheduler.js","../../src/observer/traverse.js","../../src/observer/watcher.js","../../src/state.js","../../src/vdom/vnode.js","../../src/vdom/patch.js","../../src/lifecycle.js","../../src/compiler/parser-html.js","../../src/compiler/index.js","../../src/events.js","../../src/init.js","../../src/vdom/create-component.js","../../src/vdom/create-element.js","../../src/render.js","../../src/global-api/extend.js","../../src/global-api/assets.js","../../src/global-api/mixin.js","../../src/global-api/index.js","../../src/index.js"],"sourcesContent":["export function isObject(value) {\n    return value && typeof value === 'object'\n}\n\n\nexport function proxy(vm, source, key) {\n    Object.defineProperty(vm, key, {\n        get() {\n            return vm[source][key]\n        },\n        set(newValue) {\n            vm[source][key] = newValue\n        }\n    })\n}\n\nexport function noop() { }\n\n\nexport function def(data, key, value) {\n    Object.defineProperty(data, key, {\n        enumerable: false,\n        configurable: false,\n        value\n    })\n}\n\nexport const LIFECYCLE_HOOKS = [\n    'beforeCreate',\n    'created',\n    'beforeMount',\n    'mounted',\n    'beforeUpdate',\n    'updated',\n    'beforeDestroy',\n    'destroyed',\n    'activated',\n    'deactivated',\n    'errorCaptured'\n]\n/**\n * 策略模式的应用\n */\nconst strats = {};\n\n\n/**\n * 组件属性的合并策略\n */\nfunction mergeAssets(parentVal, childVal) {\n    const res = Object.create(parentVal);\n    const keys = Object.keys(childVal)\n    if (childVal) {\n        for (let key in childVal) {\n            res[key] = childVal[key];\n        }\n    }\n    return res;\n}\nstrats.components = mergeAssets;\n\n/**\n * 生命周期的合并策略\n */\nfunction mergeHook(parentVal, childValue) {\n    if (childValue) {\n        if (parentVal) {\n            return parentVal.concat(childValue);\n        } else {\n            return [childValue]\n        }\n    } else {\n        return parentVal;\n    }\n}\nLIFECYCLE_HOOKS.forEach(hook => {\n    strats[hook] = mergeHook\n})\n\n/**\n * 合并用户自定义传入的options与组件的options\n */\nexport function mergeOptions(parent, child) {\n    const options = {}\n    for (let key in parent) {\n\n        mergeField(key)\n\n    }\n    for (let key in child) {\n        if (!parent.hasOwnProperty(key)) {\n            mergeField(key);\n        }\n    }\n    function mergeField(key) {\n        if (key === '_base') {\n            options[key] = parent[key]\n            return\n        }\n        if (strats[key]) {\n            options[key] = strats[key](parent[key], child[key]);\n        } else {\n            if (typeof parent[key] === 'object' && typeof child[key] === 'object') {\n                options[key] = {\n                    ...parent[key],\n                    ...child[key]\n                }\n            } else {\n                if (child[key]) {\n                    options[key] = child[key];\n                    return\n                }\n                options[key] = parent[key]\n            }\n        }\n    }\n    return options\n}\n\n\n\nexport function isDef(v) {\n    return v !== undefined && v !== null\n}","\nlet id = 0\nclass Dep {\n    constructor() {\n        this.id = id++\n        this.subs = []\n    }\n\n    /**\n     * 观察目标发布\n     */\n    notify() {\n        this.subs.forEach((watcher) => {\n            watcher.update()\n        })\n    }\n    /**\n     * 提供注册方法一\n     */\n    addSub(watcher) {\n        this.subs.push(watcher)\n    }\n    /**\n     * 提供注册方法二\n     */\n    depend() {\n        if (Dep.target) {\n            Dep.target.addDep(this) // 让watcher自己把自己存放到dep上\n        }\n    }\n}\n\n/**\n * 使用数组模拟栈\n * 为什么还多声明了一个栈 为了接下来的计算属性✍️\n */\nlet stack = []\n\nexport function pushTarget(watcher) {\n    Dep.target = watcher\n    stack.push(watcher)\n}\n\nexport function popTarget() {\n    stack.pop()\n    Dep.target = stack[stack.length - 1]\n}\n\n\nexport default Dep","/**\n * Object.defineProperty 是新增和修改对象属性 ✅注意是属性\n * data对象的属性有基本类型、对象、数组\n * 属性的变化也是需要被监控到\n * 改变数组的方式 api 以及索引\n * 重写数组的那些方法 7个 push shift unshift pop reverse sort splice 会导致数组本身发生变化\n */\n\n\n\nlet oldArrayMethods = Array.prototype\n\nexport const arrayMethods = Object.create(oldArrayMethods)\n\n\nconst methods = ['push', 'shift', 'unshift', 'pop', 'reverse', 'sort', 'splice']\n\n\nmethods.forEach(method => {\n    arrayMethods[method] = function (...args) {\n        let arrInstance = this\n        const result = oldArrayMethods[method].apply(this, args)\n        let inserted\n        let ob = arrInstance.__ob__\n        switch (method) {\n            case 'push':\n            case 'unshift':\n                inserted = args\n                break\n            case 'splice':\n                insert = args.slice(2)\n        }\n        if (inserted) {\n            ob.observerArray(inserted)\n        }\n        ob.dep.notify()\n        return result\n    }\n})","import { isObject, def } from '../util/index'\nimport Dep from './dep';\nimport { arrayMethods } from './array';\n\n\n/**\n * 侦测策略：\n * 对于数组侦测 侦测其方法 索引不侦测 所以如果是[[[]]] 其索引不在侦测范围内 所以依赖收集得特殊处理\n * 对于对象 会侦测所有的熟悉\n * 如果是属性对象 递归给属性绑定__ob__属性\n */\nclass Observer {\n    constructor(value) {\n        /**\n         * 数组的依赖收集\n         * [[[]],[]]\n         */\n        this.dep = new Dep()\n        /**\n         * 只有是引用类型才具有这个属性\n         * 所以我们经常会打印看到data的属性对象具有__ob__\n         * __ob__ 就是oberver实例\n         */\n        def(value, '__ob__', this)\n        if (Array.isArray(value)) {\n            /**\n             * 进行重写覆盖\n             */\n            value.__proto__ = arrayMethods\n            this.observerArray(value)\n        } else {\n            this.walk(value)\n        }\n    }\n    /**\n     * [{}]\n     * 将数组元素对象进行侦测\n     * 对于数组元素还是为数组我们已经重写过数组方法 侦测数组方法就是\n     * 索引不进行侦测\n     * 递归给属性绑定__ob__属性\n     */\n    observerArray(value) {\n        value.forEach((obj) => {\n            observe(obj)\n        })\n    }\n    walk(data) {\n        let keys = Object.keys(data)\n        keys.forEach(key => {\n            defineReactive(data, key, data[key])\n        });\n    }\n}\n\n/**\n * \n * @param {*} data \n * @param {*} key \n * @param {*} value data属性的值\n */\nexport function defineReactive(data, key, value) {\n    /**\n     * 每个属性都绑定一个dep实例\n     */\n    const dep = new Dep()\n    let childOb = observe(value) // 递归实现深度数据侦测\n    Object.defineProperty(data, key, {\n        configurable: true,\n        enumerable: true,\n        get() {\n            /**\n             * 利用闭包返回数据\n             * 收集依赖 千万别data[key] 无限循环了\n             */\n            if (Dep.target) {\n                /**\n                 * 每次访问这个数据都会触发 存在watcher才收集\n                 */\n                dep.depend()\n                /**\n                 * 如果访问的属性是对象\n                 */\n                if (childOb) {\n                    /**\n                     * 收集数组的依赖\n                     */\n                    childOb.dep.depend()\n                    if (Array.isArray(value)) {\n                        dependArray(value)\n                    }\n                }\n            }\n            return value\n        },\n        set(newValue) {\n            console.log(\"setter\", newValue)\n            /**\n             * 派发更新\n             */\n            if (value === newValue) { return }\n            /**\n             * 修改的数据也要进行侦测\n             */\n            observe(newValue)\n            value = newValue\n            dep.notify()\n        }\n    })\n}\n\n\n/**\n * 为每个数组元素添加依赖\n */\nfunction dependArray(value) {\n    for (let i = 0; i < value.length; i++) {\n        let current = value[i]\n        current.__ob__ && current.__ob__.dep.depend()\n        if (Array.isArray(current)) {\n            dependArray(current)\n        }\n    }\n}\n\nexport function observe(data) {\n    /**\n     * 传递的属性不是对象\n     * 则不用再继续侦测\n     */\n    let isObj = isObject(data)\n    if (!isObj) {\n        return\n    }\n    return new Observer(data)\n}","\n/**\n * dom的更新是同步在vuejs1.0的时候\n * 我们执行dom更新又不是解析HTML 不要弄混淆了\n * 事实上dom更新是也是使用nextTick\n * Vue.js2.0使用异步更新队列 \n * 变化的侦测通知只发送到组件\n * 组件内所有状态的变化都会通知到同一个watcher\n * 然后会对整个组件进行更新\n * 事实上这是没有必要的 我们可以使用异步更新 做到批量更新 反正数据都是改变好了 watcher只是通知依赖进行更新 仅此而已\n */\n\nlet callbacks = [];\nfunction flushCallbacks() {\n    callbacks.forEach(cb => cb());\n}\nlet timerFunc;\nif (Promise) { // then方法是异步的\n    timerFunc = () => {\n        Promise.resolve().then(flushCallbacks)\n    }\n} else if (MutationObserver) { // MutationObserver 也是一个异步方法\n    let observe = new MutationObserver(flushCallbacks); // H5的api\n    let textNode = document.createTextNode(1);\n    /**\n     * 监听dom变化\n     * 注册事件\n     */\n    (textNode, {\n        /**\n         * 设为 true 以监视指定目标节点或子节点树中节点所包含的字符数据的变化。无默认值。\n         */\n        characterData: true\n    });\n    timerFunc = () => {\n        /**\n         * 发布dom改变了\n         */\n        textNode.textContent = 2;\n    }\n} else if (setImmediate) {\n    timerFunc = () => {\n        setImmediate(flushCallbacks)\n    }\n} else {\n    timerFunc = () => {\n        setTimeout(flushCallbacks, 0);\n    }\n}\nexport function nextTick(cb) {\n    callbacks.push(cb);\n    timerFunc();\n}","import { nextTick } from '../util/next-tick'\n\n\nlet hash = {}\n\nlet queue = []\n\n\nfunction flushSchedulerQueue() {\n    for (let i = 0; i < queue.length; i++) {\n        let watcher = queue[i]\n        watcher.run()\n    }\n    hash = {}\n    queue = []\n}\n\nlet pending = false\n\nexport function queuWatcher(watcher) {\n    const id = watcher.id\n    if (!hash[id]) {\n        /**\n         * 因为异步的原因\n         * 我们可以在这个时刻拿到多个相同watcher\n         * 多个相同watcher合并成一个\n         * 做到批量更新\n         */\n        hash[id] = true\n        queue.push(watcher)\n        if (!pending) {\n            nextTick(flushSchedulerQueue)\n            pending = true\n        }\n    }\n}","\nconst seenObjects = new Set()\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nexport function traverse(val) {\n    _traverse(val, seenObjects)\n    seenObjects.clear()\n}\n\nfunction _traverse(val, seen) {\n    let i, keys\n    const isA = Array.isArray(val)\n    if ((!isA && !isObject(val))) {\n        return\n    }\n    if (val.__ob__) {\n        const depId = val.__ob__.dep.id\n        if (seen.has(depId)) {\n            return\n        }\n        seen.add(depId)\n    }\n    if (isA) {\n        i = val.length\n        while (i--) _traverse(val[i], seen)\n    } else {\n        keys = Object.keys(val)\n        i = keys.length\n        while (i--) _traverse(val[keys[i]], seen)\n    }\n}\n","import { pushTarget, popTarget } from \"./dep\"\nimport { queuWatcher } from \"./scheduler\"\nimport { traverse } from \"./traverse\"\n\n\n/**\n * 创建watcher的过程中\n * 你想让watcher存入观察目标\n * 就得触发依赖收集的行为\n */\nlet id = 0\nclass Watcher {\n    /**\n     * \n     * @param {*} vm vue实例\n     * @param {*} exprOrFn 触发收集依赖的前置操作\n     * @param {*} callback 回调函数\n     * @param {*} options 配置\n     */\n    constructor(vm, exprOrFn, callback, options) {\n        if (options) {\n            this.user = !!options.user\n            this.sync = !!options.sync\n            this.lazy = !!options.lazy\n        } else {\n            this.deep = this.user = this.lazy = this.sync = false\n        }\n        this.vm = vm\n        this.callback = callback\n        this.options = options\n        this.deps = []\n        this.depsId = new Set()\n        if (typeof exprOrFn === 'function') {\n            this.getter = exprOrFn\n        } else {\n            /**\n             * 这个时候还没有new完\n             * 同时Dep.target也是null\n             */\n            this.getter = function () {\n                let path = exprOrFn.split('.')\n                let obj = vm\n                for (let i = 0; i > path.length; i++) {\n                    obj = obj[path[i]]\n                }\n                return obj\n            }\n        }\n        this.value = this.get()\n\n        /**\n         * this.deep=!!options.deep\n         * 针对于用户watcher\n         * 因为我们这样处理是一层属性\n         * 如果深层的子属性\n         * 也要收集watcher\n         * 所以在这时候挨个访问这些变量触发依赖收集就行\n         */\n\n    }\n    get() {\n        pushTarget(this)\n        const value = this.getter.call(this.vm)\n        if (this.deep) {\n            traverse(value)\n        }\n        popTarget()\n        return value\n    }\n    update() {\n        if (this.lazy) {\n            this.dirty = true;\n        } else if (this.sync) {\n            this.run\n        } else {\n            queuWatcher(this)\n        }\n    }\n    addDep(dep) {\n        let id = dep.id\n        /**\n         * watcher去重\n         * 一个数据多次取值\n         * 所以说观察者和观察目标耦合很大\n         */\n        if (!this.depsId.has(id)) {\n            this.depsId.add(id)\n            this.deps.push(this)\n            dep.addSub(this)\n        }\n    }\n    run() {\n        console.log(\"这里\")\n        let value = this.get()\n        let oldValue = this.value\n        this.value = value\n        if (this.user) {\n            this.callback.call(this.vm, value, oldValue)\n        }\n    }\n    evaluate() {\n        this.value = this.get()\n        this.dirty = false\n    }\n    depend() {\n        let i = this.deps.length\n        while (i--) {\n            this.deps[i].depend()\n        }\n    }\n}\n\n\nexport default Watcher","/**\n * 什么是state:\n * 就是data+computed+watch等等\n */\n\nimport { observe } from \"./observer/index\";\nimport { proxy, isObject, noop } from \"./util/index\";\nimport Watcher from \"./observer/watcher\";\nimport { defineReactive } from \"./observer/index\";\n\nexport function initState(vm) {\n    const opts = vm.$options;\n    if (opts.props) {\n        initProps(vm);\n    }\n    if (opts.methods) {\n        initMethods(vm);\n    }\n    if (opts.data) {\n        initData(vm);\n    }\n    if (opts.computed) {\n        initComputed(vm, opts.computed);\n    }\n    if (opts.watch) {\n        initWatch(vm, opts.watch);\n    }\n}\n\nfunction initData(vm) {\n    let data = vm.$options.data;\n    data = vm._data = typeof data === \"function\" ? data.call(vm) : data;\n    for (let key in data) {\n        proxy(vm, \"_data\", key);\n    }\n    observe(data);\n}\n\nfunction initProps(vm, propsOptions) {\n    const props = (vm._props = {});\n    for (const key in propsOptions) {\n        defineReactive(props, key, propsOptions[key]);\n        if (!(key in vm)) {\n            proxy(vm, \"_props\", propsOptions[key]);\n        }\n    }\n}\n\n/**\n * 不是让你实现\n * 而是看vue如何实现\n */\nfunction initMethods(vm, methods) {\n    vm[key] = typeof methods[key] !== \"function\" ? noop : methods[key].bind(vm);\n}\n\nfunction initComputed(vm, computed) {\n\t/**\n\t * 存放计算属性的watcher\n\t */\n    const watchers = (vm._computedWatchers = {});\n    for (const key in computed) {\n        const uerDef = computed[key];\n\t\t/**\n\t\t * 获取get方法\n\t\t */\n        const getter = typeof userDef === \"function\" ? userDef : userDef.get;\n\t\t/**\n\t\t * 创建计算属性watcher\n\t\t */\n        watchers[key] = new Watcher(vm, userDef, noop, { lazy: true });\n        defineComputed(vm, key, userDef);\n    }\n}\n\nconst sharedPropertyDefinition = {\n    enumerable: true,\n    configurable: true,\n    get: noop,\n    set: noop,\n};\nfunction defineComputed(target, key, userDef) {\n    if (typeof userDef === \"function\") {\n        sharedPropertyDefinition.get = createComputedGetter(key);\n    } else {\n        sharedPropertyDefinition.get = createComputedGetter(userDef.get);\n        sharedPropertyDefinition.set = userDef.set;\n    }\n\t/**\n\t * 使用defineProperty定义\n\t * 我们可以通过this.getName这种形式获取得到\n\t */\n    Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction createComputedGetter(key) {\n    return function computedGetter() {\n        const watcher = this._computedWatchers[key];\n        if (watcher) {\n            if (watcher.dirty) {\n                // 如果dirty为true\n                watcher.evaluate(); // 计算出新值，并将dirty 更新为false\n            }\n\t\t\t/**\n\t\t\t * 在这里相当于触发了getter方法\n\t\t\t * 但是我们的computed watcher是data属性数据的依赖\n\t\t\t * computed属性本身依赖data数据 所以computed数据收集依赖实质就是data属性来收集依赖（其实就是收集渲染watcher）\n\t\t\t * 收集依赖\n\t\t\t */\n            if (Dep.target) {\n                // 计算属性在模板中使用 则存在Dep.target\n\t\t\t\t/**\n\t\t\t\t * 通过watcher找到该对应的观察目标 dep\n\t\t\t\t * dep把依赖（这时候是渲染watcher）收集起来\n\t\t\t\t */\n\t\t\t\t/**\n\t\t\t\t * 我们可以在业务中手动创建观察者 实现数据变化就更新\n\t\t\t\t * 但是通常这些场景都有watch代替了 而且对应的操作是cb\n\t\t\t\t */\n\t\t\t\t/**\n                 * 为什么watcher要收集dep\n                 * 我回答下 这就是为什么别人说观察者模式是耦合的 就是体现在这里\n                 * 实例化watcher也有保存对应的dep 因为它要知道是哪些dep收集了他\n                 * 第一是为了做watcher去重（watcher里面会保存一个dep Set 这种数据结构）\n                 * 第二是针对于计算属性computed 实际上它就是一个计算属性watcher（观察者）\n                 * 但它同时也是观察目标(因为template可能使用到它) 那么观察目标也是需要收集对应的依赖（收集watcher，这里是收集渲染watcher），\n                 * 但是又回过头来说,computed属性实际是依赖于data属性变化而变化，也就是实际帮计算属性收集依赖也就是帮data属性收集依赖，这时候如何收集呢，\n                 * 就是要使这个计算属性watcher保存好之前的观察目标B，这也就是为什么watcher要保存dep 此时这个观察目标B不仅收集了计算属性watcher，\n                 * 而且会通过计算属性watcher来收集渲染watcher\n                 */\n                watcher.depend();\n            }\n            return watcher.value;\n        }\n    };\n}\n\nfunction initWatch(vm, watch) {\n\t/**\n\t * watch传入的参数多种多样\n\t * 统一都处理成key value形式\n\t */\n    const keys = Object.keys(watch);\n    keys.forEach((key) => {\n        const handler = watch[key];\n        if (Array.isArray(handler)) {\n            for (let i = 0; i > handler.length; i++) {\n\t\t\t\t/**\n\t\t\t\t * 为每个回调都创建一个watcher\n\t\t\t\t */\n                createWatcher(vm, key, handler[i]);\n            }\n        } else {\n            createWatcher(vm, key, handler);\n        }\n    });\n}\n\nfunction createWatcher(vm, exprOrFn, handler, options) {\n\t/**\n\t * 如果是对象则提取函数和配置\n\t */\n    if (isObject(handler)) {\n        options = handler;\n        handler = handler.handler;\n    }\n    if (typeof handler === \"string\") {\n        handler = vm[handler];\n    }\n\t/**\n\t * watch的实新核心就是创建用户watcher\n\t * handler就是callback\n\t */\n    return vm.$watch(exprOrFn, handler, options);\n}\n\nexport function stateMixin(Vue) {\n    Vue.prototype.$watch = function (exprOrFn, cb, options = {}) {\n        options.user = true;\n\t\t/**\n\t\t * 创建用户watcher\n\t\t */\n        const watcher = new Watcher(this, exprOrFn, cb, options);\n        if (options.immediate) {\n            cb.call(vm, watcher.value);\n        }\n    };\n}\n","export default function vnode(tag, data, key, children, text, componentOptions) {\n    return { tag, data, key, children, text, componentOptions }\n}\nexport function isSameVnode(oldVnode, newVnode) {\n    // 如果两个人的标签和key 一样我认为是同一个节点 虚拟节点一样我就可以复用真实节点了\n    return (oldVnode.tag === newVnode.tag) && (oldVnode.key === newVnode.key)\n}","/**\n * 创建真实的dom方法\n * createElm创建真实的dom节点（包含文本节点）\n * createComponent 创建真实的组件dom节点\n */\nimport { isSameVnode } from \"./vnode\";\n\nexport function patch(oldVnode, vnode) {\n\t/**\n\t * 判断是更新还是要渲染\n\t */\n    if (!oldVnode) {\n        return createElm(vnode);\n    } else {\n\t\t/**\n\t\t * 判断是真实的dom节点\n\t\t */\n        const isRealElement = oldVnode.nodeType;\n        if (isRealElement) {\n            const oldElm = oldVnode; // div id=\"app\"\n            const parentElm = oldElm.parentNode; // body\n            let el = createElm(vnode);\n            parentElm.insertBefore(el, oldElm.nextSibling);\n            parentElm.removeChild(oldElm);\n            return el;\n        } else {\n\t\t\t/**\n\t\t\t * 两颗虚拟dom进行diff比对\n             * 边比对边更新\n\t\t\t */\n            console.log(\"3s后即将开始diff更新\");\n            patchVnode(oldVnode, vnode);\n        }\n    }\n\n    // 递归创建真实节点 替换掉老的节点\n}\nfunction createElm(vnode) {\n    // 根据虚拟节点创建真实的节点\n    let { tag, children, key, data, text } = vnode;\n    // 是标签就创建标签\n    if (typeof tag === \"string\") {\n        // createElm需要返回真实节点\n        if (createComponent(vnode)) {\n            return vnode.componentInstance.$el;\n        }\n        vnode.el = document.createElement(tag);\n        updateProperties(vnode);\n        children.forEach((child) => {\n            // 递归创建儿子节点，将儿子节点扔到父节点中\n            return vnode.el.appendChild(createElm(child));\n        });\n    } else {\n\t\t/**\n\t\t * 虚拟dom上映射着真实dom  方便后续更新操作\n\t\t * 也就是在虚拟节点的el属性可以拿到其对应的真实节点\n\t\t */\n        vnode.el = document.createTextNode(text);\n    }\n    // 如果不是标签就是文本\n    return vnode.el;\n}\n/**\n * \n * 创建生成新的属性或者\n * 复用标签,并且更新属性\n */\nfunction updateProperties(vnode, oldProps = {}) {\n    let newProps = vnode.data || {};\n    let domElement = vnode.el; //真实DOM\n    //先处理样式对象\n    let oldStyle = oldProps.style || {};\n    let newStyle = newProps.style || {};\n    //如果style属性在老的样式对象里有，新的没有，需要删除。如果老的没有，新的有要添加上\n    for (let oldAttrName in oldStyle) {\n        //oldStyle{color:'red',backgroundColor:'green'}\n        if (!newStyle[oldAttrName]) {\n            domElement.style[oldAttrName] = \"\";\n        }\n    }\n    //把老的属性对象中的有，新的属性对象里没有的删除\n    for (let oldPropName in oldProps) {\n        if (!newProps[oldPropName]) {\n            delete domElement[oldPropName];\n        }\n    }\n\n    //添加的新的属性\n    for (let newPropName in newProps) {\n        if (newPropName === \"style\") {\n            let styleObject = newProps.style; //拿取新的样式对象\n            for (let newAttrName in styleObject) {\n                domElement.style[newAttrName] = styleObject[newAttrName];\n            }\n        } else {\n            //直接 更新 直接 拿 新的属性对象中属性的值覆盖掉真实DOM的属性\n             domElement[newPropName] = newProps[newPropName];\n        }\n    }\n}\n\nexport function createComponent(vnode) {\n\t/**\n\t * 触发init方法\n\t * 生成组件的真实dom\n\t */\n    let i = vnode.data;\n    if ((i = i.hook) && (i = i.init)) {\n        i(vnode);\n    }\n    if (vnode.componentInstance) {\n        return true;\n    }\n}\n\n/**\n * 把一个虚拟DOM节点变成真实DOM节点挂载到容器上\n * @param {} vnode 虚拟DOM节点\n * @param {*} container 容器\n */\nexport function mount(vnode, container) {\n    let newDOMElement = createElm(vnode);\n    container.appendChild(newDOMElement);\n}\n//比较老的虚拟DOM节点和新的虚拟DOM节点\nexport function patchVnode(oldVnode, newVnode) {\n    //1.如果新的虚拟DOM节点类型type不一样，直接重建\n    if (oldVnode.type !== newVnode.type) {\n        return oldVnode.el.parentNode.replaceChild(createElm(newVnode), oldVnode.el);\n    }\n    // 如果标签一致但是不存在则是文本节点\n    if (!oldVnode.tag) {\n        if (typeof newVnode.text !== \"undefined\") {\n            return (oldVnode.el.textContent = newVnode.text);\n        }\n    }\n\n\n    //如果类型一样，要继续往下比较 1.比较属性 2比较它的儿子们\n    //path就是找出新的虚拟DOM节点和老的虚拟DOM的差异，更新当前页面上的那个真实DOM\n    let el = (newVnode.el = oldVnode.el); //老的真实DOM节点\n    //传入新的虚拟DOM节点和老的属性对象 更新老的真实DOM节点上的属性\n    updateProperties(newVnode, oldVnode.data);\n    let oldChildren = oldVnode.children; //老的虚拟DOM节点的儿子数组\n    let newChildren = newVnode.children; //新的虚拟DOM节点儿子数组\n    if (oldChildren.length > 0 && newChildren.length > 0) {\n        updateChildren(el, oldChildren, newChildren);\n    } else if (oldChildren.length > 0) {\n        //老的有儿子，新的没儿子\n        el.innerHTML = \"\";\n    } else if (newChildren.length > 0) {\n        //老的没有儿子，新的有儿子\n        for (let i = 0; i < newChildren.length; i++) {\n            el.appendChild(createElm(newChildren[i]));\n        }\n    }\n}\nfunction createKeyToIndexMap(children) {\n    let map = {};\n    for (let i = 0; i < children.length; i++) {\n        let key = children[i].key;\n        if (key) {\n            map[key] = i;\n        }\n    }\n    return map;\n}\nfunction updateChildren(parentDomElement, oldChildren, newChildren) {\n    let oldStartIndex = 0,\n        oldStartVnode = oldChildren[0]; //老的开始索引和老的开始节点\n    let oldEndIndex = oldChildren.length - 1,\n        oldEndVnode = oldChildren[oldEndIndex]; //老的结束索引和老的结束节点\n\n    let newStartIndex = 0,\n        newStartVnode = newChildren[0]; //新的开始索引和新的开始节点\n    let newEndIndex = newChildren.length - 1,\n        newEndVnode = newChildren[newEndIndex]; //新的结束索引和新的结束节点\n    let oldKeyToIndexMap = createKeyToIndexMap(oldChildren);\n    //两个队列都没有循环结束就要继续循环，如果有一个结束，就停止循环\n    while (oldStartIndex <= oldEndIndex && newStartIndex <= newEndIndex) {\n        //老的开始节点和新的开始节点进行比较\n        if (!oldStartVnode) {\n            oldStartVnode = oldChildren[++oldStartIndex];\n        } else if (!oldEndVnode) {\n            oldEndVnode = oldChildren[--oldEndIndex];\n        } else if (isSameVnode(oldStartVnode, newStartVnode)) {\n            //找到newStartVnode和oldStartVnode的的差异，并且更新到真实DOM上去oldStartVnode.domElement\n            patchVnode(oldStartVnode, newStartVnode);\n            oldStartVnode = oldChildren[++oldStartIndex];\n            newStartVnode = newChildren[++newStartIndex];\n        } else if (isSameVnode(oldEndVnode, newEndVnode)) {\n            patchVnode(oldEndVnode, newEndVnode);\n            oldEndVnode = oldChildren[--oldEndIndex];\n            newEndVnode = newChildren[--newEndIndex];\n        } else if (isSameVnode(oldEndVnode, newStartVnode)) {\n            //老的结束和新的开始对应的把尾部的元素移动到头部\n            patchVnode(oldEndVnode, newStartVnode);\n            parentDomElement.insertBefore(oldEndVnode.domElement, oldStartVnode.domElement);\n            oldEndVnode = oldChildren[--oldEndIndex];\n            newStartVnode = newChildren[++newStartIndex];\n        } else if (isSameVnode(oldStartVnode, newEndVnode)) {\n            //老的结束和新的开始对应的把尾部的元素移动到头部\n            patchVnode(oldStartVnode, newEndVnode);\n            parentDomElement.insertBefore(oldStartVnode.domElement, oldEndVnode.domElement.nextSi);\n            oldStartVnode = oldChildren[++oldStartIndex];\n            newEndVnode = newChildren[--newEndIndex];\n            //进行DOM移动 把老的开始真实DOM移动真实DOM的尾部\n        } else {\n            let oldIndexByKey = oldKeyToIndexMap[newStartVnode.key];\n            if (oldIndexByKey == null) {\n                parentDomElement.insertBefore(createElm(newStartVnode), oldStartVnode.domElement);\n            } else {\n                let oldVnodeToMove = oldChildren[oldIndexByKey];\n                if (oldVnodeToMove.type !== newStartVnode.type) {\n\t\t\t\t\t/**\n\t\t\t\t\t * 删除重建\n\t\t\t\t\t */\n                    parentDomElement.insertBefore(createElm(newStartVnode), oldStartVnode.domElement);\n                } else {\n                    patchVnode(oldVnodeToMove, newStartVnode);\n                    oldChildren[oldIndexByKey] = undefined;\n                    parentDomElement.insertBefore(oldVnodeToMove.domElement, oldStartVnode.domElement);\n                }\n            }\n            newStartVnode = newChildren[++newStartIndex];\n        }\n    }\n    if (newStartIndex <= newEndIndex) {\n        //是老的队列 处理完了，新的队列没处理完\n        //我要把这个节点插入到谁的前面\n        let beforeDOMElement =\n            newChildren[newEndIndex + 1] == null ? null : newChildren[newEndIndex + 1].domElement;\n        for (let i = newStartIndex; i <= newEndIndex; i++) {\n            parentDomElement.insertBefore(createElm(newChildren[i]), beforeDOMElement);\n        }\n    }\n    if (oldStartIndex <= oldEndIndex) {\n        for (let i = oldStartIndex; i <= oldEndIndex; i++) {\n            parentDomElement.removeChild(oldChildren[i].domElement);\n        }\n    }\n}\n","import Watcher from './observer/watcher'\nimport { patch } from './vdom/patch'\nimport { noop } from './util/index'\n\n\n/**\n * 调用生命周期钩子\n */\nexport function callHook(vm, hook) {\n    const handlers = vm.$options[hook]\n    if (handlers) {\n        handlers.forEach((handler) => {\n            handler.call(vm)\n        })\n    }\n}\nexport function lifecyleMixin(Vue) {\n    Vue.prototype._update = function (vnode) {\n        const vm = this\n        const prevVnode = vm._vnode\n        vm._vnode = vnode\n        if (!prevVnode) {\n            /**\n             * 第一次进行渲染页面不存在prevVnode\n             * 直接创建真实的dom并进行挂载\n             * 这个$el是真实的#app dom\n             */\n            vm.$el = patch(vm.$el, vnode)\n        } else {\n            /**\n             * 更新时做diff操作\n             */\n            vm.$el = patch(prevVnode, vnode)\n        }\n    }\n}\n\nexport function mountComponent(vm, el) {\n    const options = vm.$options\n    vm.$el = el\n    let updateComponent = () => {\n        vm._update(vm._render())\n    }\n    /**\n     * 用vue开发应用\n     * 这个就是由组件搭建而成的\n     * 数据一变化 不是细微到更新某个dom节点\n     * 而是组件级别的更新 就如updateComponent命名一样\n     */\n    new Watcher(vm, updateComponent, noop, true) // true表示他是一个渲染watcher\n}","const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`; // abc-aaa\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`; // <aaa:asdads>\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 标签开头的正则 捕获的内容是标签名\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`); // 匹配标签结尾的 </div>\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; // 匹配属性的\nconst startTagClose = /^\\s*(\\/?)>/; // 匹配标签结束的 >  <div>\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\n\n\nexport function parseHTML(html) {\n    let root = null; // ast语法树的树根\n    let currentParent; // 标识当前父亲是谁\n    let stack = [];\n    const ELEMENT_TYPE = 1;\n    const TEXT_TYPE = 3;\n\n    function createASTElement(tagName, attrs) {\n        return {\n            tag: tagName,\n            type: ELEMENT_TYPE,\n            children: [],\n            attrs,\n            parent: null\n        }\n    }\n    function start(tagName, attrs) {\n        // 遇到开始标签 就创建一个ast元素s\n        let element = createASTElement(tagName, attrs);\n        if (!root) {\n            root = element;\n        }\n        currentParent = element; // 把当前元素标记成父ast树\n        stack.push(element); // 将开始标签存放到栈中\n    }\n    function chars(text) {\n        text = text.replace(/\\s/g, '');\n        if (text) {\n            currentParent.children.push({\n                text,\n                type: TEXT_TYPE\n            })\n        }\n    }\n    function end(tagName) {\n        let element = stack.pop(); // 拿到的是ast对象\n        // 我要标识当前这个p是属于这个div的儿子的\n        currentParent = stack[stack.length - 1];\n        if (currentParent) {\n            element.parent = currentParent;\n            currentParent.children.push(element); // 实现了一个树的父子关系\n        }\n    }\n    function parse(html) {\n        // 不停的去解析html字符串\n        while (html) {\n            let textEnd = html.indexOf('<');\n            if (textEnd === 0) {\n                // 如果当前索引为0 肯定是一个标签 开始标签 结束标签\n                let startTagMatch = parseStartTag(); // 通过这个方法获取到匹配的结果 tagName,attrs\n                if (startTagMatch) {\n                    start(startTagMatch.tagName, startTagMatch.attrs); // 1解析开始标签\n                    continue; // 如果开始标签匹配完毕后 继续下一次 匹配\n                }\n                let endTagMatch = html.match(endTag);\n                if (endTagMatch) {\n                    advance(endTagMatch[0].length);\n                    end(endTagMatch[1]); // 2解析结束标签\n                    continue;\n                }\n            }\n            let text;\n            if (textEnd >= 0) {\n                text = html.substring(0, textEnd);\n            }\n            if (text) {\n                advance(text.length);\n                chars(text); // 3解析文本\n            }\n        }\n        function advance(n) {\n            html = html.substring(n);\n        }\n        function parseStartTag() {\n            let start = html.match(startTagOpen);\n            if (start) {\n                const match = {\n                    tagName: start[1],\n                    attrs: []\n                }\n                advance(start[0].length); // 将标签删除\n                let end, attr;\n                while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n                    // 将属性进行解析\n                    advance(attr[0].length); // 将属性去掉\n                    match.attrs.push({\n                        name: attr[1],\n                        value: attr[3] || attr[4] || attr[5]\n                    });\n                }\n                if (end) { // 去掉开始标签的 >\n                    advance(end[0].length);\n                    return match\n                }\n            }\n        }\n        return root;\n    }\n    return parse(html)\n}\n\n","// ast语法树 是用对象来描述原生语法的   虚拟dom 用对象来描述dom节点的\n// ?: 匹配不捕获\n// argumens[0] = 匹配到的标签  arguments[1] 匹配到的标签名字\nimport { parseHTML } from './parser-html';\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\nfunction genProps(attrs) { // 处理属性 拼接成属性的字符串\n    let str = '';\n    for (let i = 0; i < attrs.length; i++) {\n        let attr = attrs[i];\n        if (attr.name === 'style') {\n            // style=\"color: red;fontSize:14px\" => {style:{color:'red'},id:name,}\n            let obj = {};\n            attr.value.split(';').forEach(item => {\n                let [key, value] = item.split(':');\n                obj[key] = value\n            });\n            attr.value = obj;\n        }\n        str += `${attr.name}:${JSON.stringify(attr.value)},`\n    }\n    return `{${str.slice(0, -1)}}`\n}\nfunction genChildren(el) {\n    let children = el.children;\n    if (children && children.length > 0) {\n        return `${children.map(c => gen(c)).join(',')}`\n    } else {\n        return false;\n    }\n}\nfunction gen(node) {\n    if (node.type == 1) {\n        // 元素标签\n        return generate(node);\n    } else {\n        let text = node.text; //   <div>a {{  name  }} b{{age}} c</div>\n        let tokens = [];\n        let match, index;\n        // 每次的偏移量 buffer.split()\n        let lastIndex = defaultTagRE.lastIndex = 0; // 只要是全局匹配 就需要将lastIndex每次匹配的时候调到0处\n        while (match = defaultTagRE.exec(text)) {\n            index = match.index;\n            if (index > lastIndex) {\n                tokens.push(JSON.stringify(text.slice(lastIndex, index)));\n            }\n            tokens.push(`_s(${match[1].trim()})`);\n            lastIndex = index + match[0].length;\n        }\n        if (lastIndex < text.length) {\n            tokens.push(JSON.stringify(text.slice(lastIndex)))\n        }\n        return `_v(${tokens.join('+')})`;\n    }\n}\nfunction generate(el) { // [{name:'id',value:'app'},{}]  {id:app,a:1,b:2}\n    let children = genChildren(el);\n    let code = `_c(\"${el.tag}\",${\n        el.attrs.length ? genProps(el.attrs) : 'undefined'\n        }${\n        children ? `,${children}` : ''\n        })\n    `\n    return code;\n}\nexport function compileToFunction(template) {\n    // 1) 解析html字符串 将html字符串 => ast语法树\n    let root = parseHTML(template);\n    // 需要将ast语法树生成最终的render函数  就是字符串拼接 （模板引擎）\n    let code = generate(root);\n    // 核心思路就是将模板转化成 下面这段字符串\n    //  <div id=\"app\"><p>hello {{name}}</p> hello</div>\n    // 将ast树 再次转化成js的语法\n    //  _c(\"div\",{id:app},_c(\"p\",undefined,_v('hello' + _s(name) )),_v('hello'))\n\n    // 所有的模板引擎实现 都需要new Function + with\n    /**\n     * 传this是绑定作用域\n     */\n    let renderFn = new Function(`with(this){ return ${code}}`);\n\n\n    // vue的render 他返回的是虚拟dom\n    return renderFn;\n}\n","export function eventsMixin(Vue) {\n\t/**\n\t * 遍历实例的所有事件\n\t * @param vm {Bue} bue实例\n\t * @param action {String} 动作类型,此处为'$on',代表绑定事件\n\t * @param events {Object} 事件对象,可能包含多个事件, 所以需要遍历\n\t */\n    /**\n * Vue注册自定义事件通过$on进行注册\n * 注册事件及其回调函数到实例上\n * @param event {String} 事件名称\n * @param fn {Function} 事件对应的回调函数\n * @returns {Bue} 实例本身\n */\n    Vue.prototype.$on = function (event, fn) {\n        (this._events[event] || (this._events[event] = [])).push(fn);\n        return this;\n    };\n    Vue.prototype.$emit = function (event, val) {\n        let cbs = this._events[event];\n        let shouldPropagate = true;\n        if (cbs) {\n            shouldPropagate = false;\n            // 遍历执行事件\n            let args = new Array(Array.from(arguments)[1]);\n            cbs.forEach((cb) => {\n                let res = cb.apply(this, args);\n                // 就是这里, 决定了\"只有当events事件返回true的时候, 事件才能在触发之后依然继续传播\"\n                if (res === true) {\n                    shouldPropagate = true;\n                }\n            });\n        }\n        return shouldPropagate;\n    };\n\n}\n\n/**\n * 注册单个事件\n * @param vm {Bue} bue实例\n * @param action {String} 动作类型,此处为'$on',代表绑定事件\n * @param key {String} 事件名称, 比如: 'parent-name',代表从父组件那里传递了名称过来\n * @param event {Function} 触发key事件的时候, 对应的回调函数\n */\nfunction register(vm, action, key, event) {\n    if (typeof event !== \"function\") return;\n    vm[action](key, event);\n}\n\n\n\nfunction registerCallbacks(vm, action, events) {\n    if (!events) return;\n    for (let key in events) {\n        let event = events[key];\n        register(vm, action, key, event);\n    }\n\n}\n\nexport function initEvents(vm) {\n    vm._events = Object.create(null)\n    registerCallbacks(this, \"$on\", vm._events);\n};","import { initState } from './state'\nimport { mountComponent, callHook } from './lifecycle'\nimport { compileToFunction } from './compiler/index'\nimport { mergeOptions } from './util/index'\nimport { initEvents } from './events'\n\n/**\n * 初始化混入原型上的方法\n */\nexport default function initMixin(Vue) {\n    Vue.prototype._init = function (options) {\n        /**\n         * 之所以这样写 显示知道this的指向\n         */\n        const vm = this\n        /**\n         * 可能通过extend方式 所以使用vm.constructor.options\n         * 而不直接Vue.options\n         */\n        vm.$options = mergeOptions(vm.constructor.options, options);\n        /**\n         * 初始化状态\n         */\n        initState(vm)\n        initEvents(vm)\n        callHook(vm, 'created')\n        /***\n         * 挂载流程\n         */\n        if (vm.$options.el) {\n            vm.$mount(vm.$options.el)\n        }\n    }\n\n    Vue.prototype.$mount = function (el) {\n        const vm = this\n        const options = vm.$options\n        el = document.querySelector(el)\n        /**\n         * 单文件组件利用vue-loader会帮我们解析成render的\n         */\n        /**\n         * vm实例的options配置\n         * 一个组件也是一个vm实例\n         * 所以组件生成的真实dom拿到template就行\n         * <my-component>\n         *    <div>\n         *    </div>\n         * </my-component>\n         * 不要想象成上面👆这种结构 直接拿到template解析就行\n         * 根本不需要考虑<my-component>\n         */\n        let template = options.template\n        /**\n         * 如果没写template属性 去html拿\n         */\n        if (!template && el) {\n            template = el.outerHTML\n        }\n        /**\n         * compileToFunction是将模板编译为JS语法\n         * 执行render===>得到vnode\n         */\n        const render = compileToFunction(template)\n        options.render = render\n        /**\n         * 渲染当前的组件\n         */\n        mountComponent(vm, el)\n    }\n}\n\n\n\n/**\n * 创建vue实例的时候我们同时是可以拿到真实的dom\n * 这点得知道 可以vm.$el上拿到\n */","import vnode from './vnode'\nimport { isObject } from \"../util/index\";\n\n/**\n * 创建组件虚拟dom节点createComponent\n */\nexport function createComponent(vm, tag, data, key, children, Ctor) {\n    // 获取父类构造函数\n    const baseCtor = vm.$options._base;\n    if (isObject(Ctor)) {\n        Ctor = baseCtor.extend(Ctor);\n    }\n    data.hook = { // 组件的生命周期钩子\n        init(vnode) {\n            let child = vnode.componentInstance = new Ctor({});\n            /**\n             * vnode.componentInstance就是vm实例\n             * 执行$mount方法会将真实dom挂载在vm.$el\n             * 我们可以通过vnode.componentInstance.$el拿到\n             */\n            child.$mount(); // 组件的挂载\n        }\n    }\n    return vnode(`vue-component-${Ctor.cid}-${tag}`, data, key, undefined, { Ctor, children });\n}\n","/**\n * 创建虚拟dom的方法\n * createElement创建标签虚拟dom方法\n * createTextNode创建文本虚拟dom方法\n */\n\nimport { createComponent } from './create-component'\nimport vnode from './vnode'\n\n\nfunction makeMap(str) {\n    const map = {};\n    const list = str.split(',');\n    for (let i = 0; i < list.length; i++) {\n        map[list[i]] = true;\n    }\n    return (key) => map[key];\n}\n\nexport const isReservedTag = makeMap(\n    'html,body,base,head,link,meta,style,title,' +\n    'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +\n    'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,' +\n    'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +\n    's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +\n    'embed,object,param,source,canvas,script,noscript,del,ins,' +\n    'caption,col,colgroup,table,thead,tbody,td,th,tr,' +\n    'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +\n    'output,progress,select,textarea,' +\n    'details,dialog,menu,menuitem,summary,' +\n    'content,element,shadow,template,blockquote,iframe,tfoot'\n)\n\n\n/**\n * 不用递归去创建 因为AST转化为JS语法的时候是这样调用的_c(...)\n */\nexport function createElement(context, tag, data = {}, ...children) {\n    let key = data.key;\n    if (key) {\n        delete data.key;\n    }\n    if (typeof tag === 'string') {\n        if (isReservedTag(tag)) {\n            return vnode(tag, data, key, children, undefined);\n        } else {\n            /**\n             * 判断是组件\n             * 如果是组件需要拿到组件定义的，通过组件的定义创造虚拟节点\n             */\n            let Ctor = context.$options.components[tag]\n            return createComponent(context, tag, data, key, children, Ctor)\n        }\n    }\n    return vnode(tag, data, key, children, undefined);\n}\nexport function createTextNode(text) {\n    return vnode(undefined, undefined, undefined, undefined, text);\n}\n\n\n","import {\n    createElement,\n    createTextNode\n} from './vdom/create-element'\nimport { nextTick } from './util/next-tick';\nexport function renderMixin(Vue) {\n    // _c 创建元素的虚拟节点\n    // _v 创建文本的虚拟节点\n    // _s JSON.stringify\n\n    Vue.prototype._c = function () {\n        return createElement(this, ...arguments); // tag,data,children1,children2\n    }\n    Vue.prototype._v = function (text) {\n        return createTextNode(text);\n    }\n    Vue.prototype._s = function (val) {\n        return val == null ? '' : (typeof val === 'object' ? JSON.stringify(val) : val);\n    }\n    Vue.prototype._render = function () {\n        const vm = this;\n        const {\n            render\n        } = vm.$options;\n        let vnode = render.call(vm); // 去实例上 取值\n        return vnode;\n    }\n    Vue.prototype.$nextTick = function (fn) {\n        return nextTick(fn, this)\n    }\n}","import { mergeOptions } from '../util/index'\nexport default function initExtend(Vue) {\n    let cid = 0;\n    Vue.extend = function (extendOptions) {\n        const Super = this;\n        const Sub = function VueComponent(options) {\n            this._init(options)\n        }\n        Sub.cid = cid++;\n        Sub.prototype = Object.create(Super.prototype);\n        Sub.prototype.constructor = Sub;\n        Sub.options = mergeOptions(\n            Super.options,\n            extendOptions\n        );\n        return Sub\n    }\n}","export default function initAssetRegisters(Vue) {\n    Vue.component = function (id, definition) {\n        definition.name = definition.name || id\n        /**\n         * 生成一个新的组件类\n         */\n        definition = this.options._base.extend(definition)\n        this.options['components'][id] = definition\n    }\n}","import { mergeOptions } from '../util/index'\n\n\nexport function initMixin(Vue) {\n    Vue.mixin = function (mixin) {\n        /**\n         * 这里的this指代Vue\n         */\n        /**\n         * mergeOptions合并策略\n         * 生命周期通过数组形式进行concat\n         * 如果属性是对象 则合并两个对象\n         * 其它则直接替代\n         */\n        /**\n         * 之所以这样处理\n         * 考虑多次调用Vue.mixin的情况\n         * 然后mergeOptions也会在_init 初始化的时候调用 将Vue构造函数的options是实例化的options进行合并 \n         * 合并策略是一致的\n         * 这就是mixin的原理\n         */\n        this.options = mergeOptions(this.options, mixin)\n        return this\n    }\n}\n","import { mergeOptions } from '../util/index'\nimport initExtend from './extend'\nimport initAssetRegisters from './assets'\nimport { initMixin } from './mixin'\n\n\nexport function initGlobalAPI(Vue) {\n    Vue.options = {}\n    initMixin(Vue)\n    /**\n     * _base就是Vue的构造函数\n     */\n    Vue.options._base = Vue;\n    Vue.options.components = {}\n    /**\n     * 注册API方法\n     */\n    initExtend(Vue)\n    initAssetRegisters(Vue)\n}\n\n","import initMixin from './init'\nimport { renderMixin } from './render'\nimport { lifecyleMixin } from './lifecycle'\nimport { initGlobalAPI } from './global-api/index'\nimport { stateMixin } from './state'\nimport { eventsMixin } from './events'\nfunction Vue(options) {\n    /**\n     * 进行初始化\n     */\n    this._init(options)\n}\n\n/**\n * 模块化思想\n * 拆分多个流程到不同文件上\n */\ninitMixin(Vue)\nstateMixin(Vue)\neventsMixin(Vue)\nlifecyleMixin(Vue)\nrenderMixin(Vue)\ninitGlobalAPI(Vue)\n\n/**\n * 执行流程：\n * new Vue ===> init===> $mount(执行挂载函数 内部就继续走下面的 compile ===> render ===> vnode===> patch ===> DOM)\n */\nexport default Vue\n\n\n"],"names":["isObject","value","proxy","vm","source","key","Object","defineProperty","get","set","newValue","noop","def","data","enumerable","configurable","LIFECYCLE_HOOKS","strats","mergeAssets","parentVal","childVal","res","create","components","mergeHook","childValue","concat","forEach","hook","mergeOptions","parent","child","options","mergeField","hasOwnProperty","id","Dep","subs","watcher","update","push","target","addDep","stack","pushTarget","popTarget","pop","length","oldArrayMethods","Array","prototype","arrayMethods","methods","method","arrInstance","args","result","apply","inserted","ob","__ob__","insert","slice","observerArray","dep","notify","Observer","isArray","__proto__","walk","obj","observe","keys","defineReactive","childOb","depend","dependArray","console","log","i","current","isObj","callbacks","flushCallbacks","cb","timerFunc","Promise","resolve","then","MutationObserver","textNode","document","createTextNode","textContent","setImmediate","setTimeout","nextTick","hash","queue","flushSchedulerQueue","run","pending","queuWatcher","seenObjects","Set","traverse","val","_traverse","clear","seen","isA","depId","has","add","Watcher","exprOrFn","callback","user","sync","lazy","deep","deps","depsId","getter","path","split","call","dirty","addSub","oldValue","initState","opts","$options","props","initProps","initMethods","initData","computed","initComputed","watch","initWatch","_data","propsOptions","_props","bind","watchers","_computedWatchers","uerDef","userDef","defineComputed","sharedPropertyDefinition","createComputedGetter","computedGetter","evaluate","handler","createWatcher","$watch","stateMixin","Vue","immediate","vnode","tag","children","text","componentOptions","isSameVnode","oldVnode","newVnode","patch","createElm","isRealElement","nodeType","oldElm","parentElm","parentNode","el","insertBefore","nextSibling","removeChild","patchVnode","createComponent","componentInstance","$el","createElement","updateProperties","appendChild","oldProps","newProps","domElement","oldStyle","style","newStyle","oldAttrName","oldPropName","newPropName","styleObject","newAttrName","init","type","replaceChild","oldChildren","newChildren","updateChildren","innerHTML","createKeyToIndexMap","map","parentDomElement","oldStartIndex","oldStartVnode","oldEndIndex","oldEndVnode","newStartIndex","newStartVnode","newEndIndex","newEndVnode","oldKeyToIndexMap","nextSi","oldIndexByKey","oldVnodeToMove","undefined","beforeDOMElement","callHook","handlers","lifecyleMixin","_update","prevVnode","_vnode","mountComponent","updateComponent","_render","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","root","currentParent","ELEMENT_TYPE","TEXT_TYPE","createASTElement","tagName","attrs","start","element","chars","replace","end","parse","textEnd","indexOf","startTagMatch","parseStartTag","endTagMatch","match","advance","substring","n","attr","name","defaultTagRE","genProps","str","item","JSON","stringify","genChildren","c","gen","join","node","generate","tokens","index","lastIndex","exec","trim","code","compileToFunction","template","renderFn","Function","eventsMixin","$on","event","fn","_events","$emit","cbs","shouldPropagate","from","arguments","register","action","registerCallbacks","events","initEvents","initMixin","_init","constructor","$mount","querySelector","outerHTML","render","Ctor","baseCtor","_base","extend","cid","makeMap","list","isReservedTag","context","renderMixin","_c","_v","_s","$nextTick","initExtend","extendOptions","Super","Sub","VueComponent","initAssetRegisters","component","definition","mixin","initGlobalAPI"],"mappings":"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"}